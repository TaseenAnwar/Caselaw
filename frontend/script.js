// script.js - Frontend JavaScript for Taseen's Caselaw Search

document.addEventListener('DOMContentLoaded', function() {
    // Get references to DOM elements
    const searchForm = document.getElementById('search-form');
    const searchBtn = document.getElementById('search-btn');
    const loadingIndicator = document.getElementById('loading');
    const resultsContainer = document.getElementById('results');
    const casesContainer = document.getElementById('cases-container');
    const errorMessage = document.getElementById('error-message');
    const successMessage = document.getElementById('success-message');

    // Configuration
    const config = {
        // Set to true to use the real API backend, false for demo mode
        useRealBackend: true,
        
        // Your backend server URL - change this when deployed
        // For local development
        backendUrl: 'http://localhost:3000',
        
        // For production deployment (update this when you deploy)
        // backendUrl: 'https://your-deployed-backend-url.com',
    };

    // Event listener for form submission
    searchBtn.addEventListener('click', async function(e) {
        e.preventDefault();
        await performSearch();
    });

    // Also listen for Enter key in the form
    searchForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        await performSearch();
    });

    // Main search function
    async function performSearch() {
        // Get form values
        const legalIssue = document.getElementById('legal-issue').value.trim();
        const jurisdiction = document.getElementById('jurisdiction').value.trim();
        const lawTypes = document.getElementById('law-types').value.trim();

        // Basic validation
        if (!legalIssue || !jurisdiction || !lawTypes) {
            showError('Please fill in all fields to find relevant cases.');
            return;
        }

        // Reset any previous messages
        hideError();
        hideSuccess();

        // Show loading indicator
        loadingIndicator.style.display = 'block';
        resultsContainer.style.display = 'none';

        try {
            let caseData;

            if (config.useRealBackend) {
                // Real API call through our backend
                console.log('Sending request to backend server...');
                
                try {
                    const response = await fetch(`${config.backendUrl}/api/search`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            legalIssue,
                            jurisdiction,
                            lawTypes
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json().catch(() => null);
                        console.error('Backend Error:', errorData || response.statusText);
                        throw new Error(`Backend error: ${response.status} ${response.statusText}`);
                    }

                    caseData = await response.json();
                    
                } catch (err) {
                    console.error("Fetch error:", err);
                    throw new Error("Network error when contacting the backend server. Make sure the server is running.");
                }
            } else {
                // Demo mode - use mock data instead of real API call
                console.log('Running in demo mode with sample data');
                
                // Simulate API delay
                await new Promise(resolve => setTimeout(resolve, 2000));

                // Mock data for demonstration
                caseData = {
                    cases: [
                        {
                            name: "Example v. Demo Corp.",
                            summary: "This is an example case summary that would typically be generated by the OpenAI API. The case involved similar issues to yours and established a precedent for how courts in your jurisdiction handle these matters. This is relevant to your situation because it addresses the key legal questions at stake in your current matter.",
                            citation: "123 F.3d 456 (9th Cir. 2022)"
                        },
                        {
                            name: "Sample v. Test LLC",
                            summary: "Another example case that would be relevant to your legal issue. This case refined the principles established in Example v. Demo Corp and clarified how they apply in situations similar to yours. The court specifically addressed questions about legal standards that are directly applicable to your current matter.",
                            citation: "234 Cal. App. 4th 567 (2021)"
                        },
                        {
                            name: "Precedent v. Legal Industries",
                            summary: "This case established important guidelines for issues similar to yours in your jurisdiction. The court ruled on matters that have direct bearing on how your case might be evaluated. The principles outlined here would be critical for building your legal strategy.",
                            citation: "345 U.S. 678 (2020)"
                        },
                        {
                            name: "Illustration v. Pattern Co.",
                            summary: "This case dealt with facts remarkably similar to your situation and provides insight into how courts in your jurisdiction might view your specific circumstances. The ruling here offers valuable guidance on strategy and potential outcomes for your current matter.",
                            citation: "456 F. Supp. 3d 789 (S.D. Cal. 2023)"
                        },
                        {
                            name: "Reference v. Standard Inc.",
                            summary: "This recent case refined the application of principles from earlier precedents in circumstances that closely parallel yours. The court's analysis provides a framework that would be directly applicable to evaluating the strengths and weaknesses of your position in the current matter.",
                            citation: "567 Cal. Rptr. 3d 890 (Ct. App. 2024)"
                        }
                    ]
                };
            }

            // Validate response structure
            if (!caseData.cases || !Array.isArray(caseData.cases) || caseData.cases.length === 0) {
                throw new Error('Invalid response format from API');
            }

            // Display the results
            displayCases(caseData.cases);
            showSuccess('Successfully found relevant cases for your legal issue.');

        } catch (error) {
            console.error('Error:', error);
            showError('An error occurred while searching for cases: ' + error.message);
        } finally {
            // Hide loading indicator
            loadingIndicator.style.display = 'none';
        }
    }

    // Display cases in the UI
    function displayCases(cases) {
        // Clear previous results
        casesContainer.innerHTML = '';

        // Handle cases even if less than 5 are returned
        const casesToDisplay = cases.slice(0, 5);

        // Add each case card
        casesToDisplay.forEach((caseItem, index) => {
            // Check if all required fields exist
            const caseName = caseItem.name || 'Unnamed Case';
            const caseSummary = caseItem.summary || 'No summary provided';
            const caseCitation = caseItem.citation || 'No citation provided';

            const caseCard = document.createElement('div');
            caseCard.className = 'case-card';
            caseCard.innerHTML = `
                <div class="case-header">
                    <span>${caseName}</span>
                    <span class="case-relevance">Case ${index + 1}</span>
                </div>
                <div class="case-body">
                    <p>${caseSummary}</p>
                    <div class="case-citation">${caseCitation}</div>
                </div>
            `;
            casesContainer.appendChild(caseCard);
        });

        // Show results section
        resultsContainer.style.display = 'block';

        // Scroll to results
        resultsContainer.scrollIntoView({ behavior: 'smooth' });
    }

    // UI helper functions
    function showError(message) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
        setTimeout(() => {
            errorMessage.style.display = 'none';
        }, 5000);
    }

    function hideError() {
        errorMessage.style.display = 'none';
    }

    function showSuccess(message) {
        successMessage.textContent = message;
        successMessage.style.display = 'block';
        setTimeout(() => {
            successMessage.style.display = 'none';
        }, 5000);
    }

    function hideSuccess() {
        successMessage.style.display = 'none';
    }
});
